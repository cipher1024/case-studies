{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 The goal of the following note is to present the basis of the development of an expression parser by presenting first the development of the acceptor of a simplified language.  We start with an acceptor because we know that the validity of the input is an output of interest and can arguably be of great value later when developing the code for building a syntax tree.\
\
For our formal derivations, we try and work with Hehner's calculus.  Here is a short summary of the relations between predicates and programs.\
\

\b Summary of Hehner's calculus
\b0 \
\
A statement is a relation between initial values and final values of the state variables.  The final values are denoted by adding one prime to the name of the initial value.  In the case of named expressions (introduced using the colon notation) \
\

\b end of summary
\b0 \
\
\

\b Summary of predicate logic operators
\b0 \
\
=	Equality\
==	Equivalence: it has the same meaning has = but applies only to boolean operands and has a lesser precedence than all other logical operators\
/\\	Conjunction\
\\/	Disjunction:  we use the same precedence as with the conjunction to preserve as much as possible their symmetry\
==>	Implication\
<==	Consequence: this is used in proofs to allow using a layout which is more suited to the presentation of proofs that avoids pulling rabbits out of hats rather than keeping a discipline which is merely founded on a syntactic arbitrariness.\
( 
\b E
\b0  x:  R:  T )	Existential quantification over range R of term T.  This is in general, the syntax used for iterated operators with 
\b A
\b0  the symbol for universal quantification, +, that of sum and * that of product.\
\

\b proofs
\b0 \
\
We chose to present proofs as derivations of logical formulae \
\

\b end of summary}