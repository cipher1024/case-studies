{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 The chain is a data structure of interest since it is used as the implementation of many different kinds of sequence based collections.  We will start by introducing the basis for structures around dynamically instantiated objects which is usually known as a heap.  We will use P as the type for pointers and live as a variable of type predicate over P that tells us at any given moment whether a certain pointer points to a live object.  There is not much to say about these two with nothing else so we will now introduce an operation to create an object and another one to eliminate one.\
\
create:	( 
\b E
\b0  p:  live.p = false:  live'.p = true  /\\  ( 
\b A
\b0  q:  q \uc0\u8800  p: live.q = live'q ) )\
\
eliminate:	( 
\b E
\b0  p:  live.p = true:  live'.p = false /\\ ( 
\b A
\b0  q:  q \uc0\u8800  p:  live.q = live'.q ) )\
\
\
 sketching  the structure with two variables and one invariant}